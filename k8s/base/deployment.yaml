apiVersion: apps/v1
kind: Deployment
metadata:
  name: market-data-agent
  namespace: market-data-agent
  labels:
    app.kubernetes.io/name: market-data-agent
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: market-data-platform
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: kustomize
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: market-data-agent
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: market-data-agent
        app.kubernetes.io/component: api
        app.kubernetes.io/part-of: market-data-platform
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: market-data-agent
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: market-data-agent
        image: market-data-agent:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        - name: websocket
          containerPort: 8001
          protocol: TCP
        - name: metrics
          containerPort: 8080
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "INFO"
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: market-data-agent-secrets
              key: redis-url
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: market-data-agent-secrets
              key: database-url
        - name: API_KEYS
          valueFrom:
            secretKeyRef:
              name: market-data-agent-secrets
              key: api-keys
        envFrom:
        - configMapRef:
            name: market-data-agent-config
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: "1"
            memory: 2Gi
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /startup
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: logs
          mountPath: /app/logs
        - name: data
          mountPath: /app/data
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: market-data-agent-config
      - name: logs
        emptyDir: {}
      - name: data
        persistentVolumeClaim:
          claimName: market-data-agent-data
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - market-data-agent
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "market-data"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"