apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "market-data-agent.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "market-data-agent.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  {{- if .Values.updateStrategy }}
  strategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "market-data-agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "market-data-agent.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "market-data-agent.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      {{- if .Values.initContainers }}
      initContainers:
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          image: "{{ include "market-data-agent.image" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.config.server.port }}
              protocol: TCP
            - name: websocket
              containerPort: {{ .Values.config.server.websocket_port }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.config.server.metrics_port }}
              protocol: TCP
          env:
            - name: ENVIRONMENT
              value: {{ .Values.config.app.environment | quote }}
            - name: LOG_LEVEL
              value: {{ .Values.config.logging.level | quote }}
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "market-data-agent.fullname" . }}-secrets
                  key: database-url
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "market-data-agent.fullname" . }}-secrets
                  key: redis-url
            - name: API_KEYS
              valueFrom:
                secretKeyRef:
                  name: {{ include "market-data-agent.fullname" . }}-secrets
                  key: api-keys
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "market-data-agent.fullname" . }}-secrets
                  key: jwt-secret
            {{- range .Values.extraEnvVars }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          {{- if .Values.extraEnvVarsCM }}
          envFrom:
            - configMapRef:
                name: {{ .Values.extraEnvVarsCM }}
          {{- end }}
          {{- if .Values.extraEnvVarsSecret }}
          envFrom:
            - secretRef:
                name: {{ .Values.extraEnvVarsSecret }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.startupProbe }}
          startupProbe:
            {{- toYaml .Values.startupProbe | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /app/config
              readOnly: true
            - name: logs
              mountPath: /app/logs
            {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: /app/data
            {{- end }}
            {{- range .Values.extraVolumeMounts }}
            - {{- toYaml . | nindent 14 }}
            {{- end }}
          {{- if .Values.lifecycle }}
          lifecycle:
            {{- toYaml .Values.lifecycle | nindent 12 }}
          {{- end }}
        {{- if .Values.sidecars }}
        {{- toYaml .Values.sidecars | nindent 8 }}
        {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "market-data-agent.fullname" . }}-config
        - name: logs
          emptyDir: {}
        {{- if .Values.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "market-data-agent.fullname" . }}-data
        {{- end }}
        {{- range .Values.extraVolumes }}
        - {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}